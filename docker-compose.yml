services:
  db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_PASSWORD=$DB_PASSWORD
      - POSTGRES_USER=postgres
      - POSTGRES_DB=zoudb
    volumes:
      - db_data:/var/lib/postgresql/data
    expose:
      - 5432
    healthcheck:
      test: [ "/bin/bash", "pg_isready", "-U", "postgres" ]
      interval: 15s
      timeout: 15s
      retries: 5
      start_period: 15s
  redis:
    image: redis
    restart: always
    expose:
      - 6379
  meilisearch:
    image: getmeili/meilisearch:v1.11
    restart: always
    environment:
      - MEILI_MASTER_KEY=${INDEXER_KEY}
    expose:
      - 7700
  zou-api:
    restart: always
    image: postwork-io/zou:latest
    build:
      context: .
      dockerfile: zou.dockerfile
    env_file:
      - .env
    environment:
      - ENABLE_JOB_QUEUE=True
      - PATH=/opt/zou/zouenv/bin:/usr/bin
    volumes:
      - zou_previews:/opt/zou/previews
      - tmp:/opt/zou/tmp
      - logs:/opt/zou/logs
    expose:
      - 5000
    command: api
    depends_on:
      db:
        condition: service_healthy
      redis:
      meilisearch:


  zou-events:
    restart: always
    image: postwork-io/zou:latest
    build:
      context: .
      dockerfile: zou.dockerfile
    env_file:
      - .env
    environment:
      - PATH=/opt/zou/zouenv/bin
    volumes:
      - zou_previews:/opt/zou/previews
      - tmp:/opt/zou/tmp
      - logs:/opt/zou/logs
    expose:
      - 5001
    command: events
    depends_on:
      - zou-api

  zou-worker:
    restart: always
    image: postwork-io/zou:latest
    build:
      context: .
      dockerfile: zou.dockerfile
    env_file:
      - .env
    environment:
      - LC_ALL=C.UTF-8
      - LANG=C.UTF-8
    volumes:
      - zou_previews:/opt/zou/previews
      - tmp:/opt/zou/tmp
      - logs:/opt/zou/logs
    command: worker
    depends_on:
      - zou-api
  kitsu:
    restart: always
    build:
      context: .
      dockerfile: kitsu.dockerfile
    ports:
      - 7000:80
      - 7443:443
    depends_on:
      - zou-api
volumes:
  db_data:
    driver: local
    driver_opts:
      type: nfs
      o: addr=${DOCKER_VOLUMES_NFS_ADDR},rw,vers=4.1
      device: ":${DOCKER_VOLUMES_NFS_PATH}/db_data"
  tmp:
    driver: local
    driver_opts:
      type: nfs
      o: addr=${DOCKER_VOLUMES_NFS_ADDR},rw,vers=4.1
      device: ":${DOCKER_VOLUMES_NFS_PATH}/tmp"
  logs:
    driver: local
    driver_opts:
      type: nfs
      o: addr=${DOCKER_VOLUMES_NFS_ADDR},rw,vers=4.1
      device: ":${DOCKER_VOLUMES_NFS_PATH}/logs"
  zou_previews:
    driver: local
    driver_opts:
      type: nfs
      o: addr=${DOCKER_VOLUMES_NFS_ADDR},rw,vers=4.1
      device: ":${DOCKER_VOLUMES_NFS_PATH}/zou_previews"
